{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/document-managment-frontend/src/components/contacts/ContactsOrganisation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactsOrganisation = _ref => {\n  _s();\n\n  let {\n    departments,\n    setDepartment\n  } = _ref;\n  useEffect(() => {\n    departments.forEach(el => {\n      if (el.used) {\n        setDepartment(`department/${el.department.id}`);\n      }\n    });\n  }, [departments]);\n\n  const toggleActive = e => {\n    if (!e.target.className.includes(\"fas\")) {\n      setDepartment(`department/${e.target.className}`);\n    }\n\n    if (e.target.parentNode.className === 'class_dropdown') {\n      e.target.parentNode.className = 'class_dropdown active';\n    } else {\n      e.target.parentNode.className = 'class_dropdown';\n    }\n  };\n\n  const handleClick = e => {\n    setDepartment(`sub/${e.target.className.split(\" \")[1]}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacts__homepage-item contacts__organisation\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search\",\n      className: \"contacts__organisation-search-label\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"keywords\",\n      className: \"contacts__organisation-search\",\n      id: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"class_dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleActive,\n        className: dep.department.id,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-caret-right contacts__caret\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 86\n        }, this), \" \", dep.department.department]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class_dropdown-child\",\n        children: dep.subDepartments.map(sub => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: `class_link ${sub.id}`,\n          onClick: handleClick,\n          children: sub.subDepartment\n        }, sub.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this)]\n    }, dep.department.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactsOrganisation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ContactsOrganisation;\nexport default ContactsOrganisation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsOrganisation\");","map":{"version":3,"sources":["/Users/macbook/Desktop/document-managment-frontend/src/components/contacts/ContactsOrganisation.js"],"names":["React","useEffect","ContactsOrganisation","departments","setDepartment","forEach","el","used","department","id","toggleActive","e","target","className","includes","parentNode","handleClick","split","map","dep","subDepartments","sub","subDepartment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,oBAAoB,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAmC;AAE7DH,EAAAA,SAAS,CAAC,MAAK;AACXE,IAAAA,WAAW,CAACE,OAAZ,CAAqBC,EAAE,IAAI;AACvB,UAAIA,EAAE,CAACC,IAAP,EAAa;AACTH,QAAAA,aAAa,CAAE,cAAaE,EAAE,CAACE,UAAH,CAAcC,EAAG,EAAhC,CAAb;AACH;AACJ,KAJD;AAKH,GANQ,EAMN,CAACN,WAAD,CANM,CAAT;;AAQA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,KAA5B,CAAL,EAAyC;AACrCV,MAAAA,aAAa,CAAE,cAAaO,CAAC,CAACC,MAAF,CAASC,SAAU,EAAlC,CAAb;AACH;;AACD,QAAIF,CAAC,CAACC,MAAF,CAASG,UAAT,CAAoBF,SAApB,KAAkC,gBAAtC,EAAwD;AACpDF,MAAAA,CAAC,CAACC,MAAF,CAASG,UAAT,CAAoBF,SAApB,GAAgC,uBAAhC;AACH,KAFD,MAEO;AACHF,MAAAA,CAAC,CAACC,MAAF,CAASG,UAAT,CAAoBF,SAApB,GAAgC,gBAAhC;AACH;AACJ,GATD;;AAWA,QAAMG,WAAW,GAAIL,CAAD,IAAO;AACvBP,IAAAA,aAAa,CAAE,OAAMO,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBI,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAiC,EAAzC,CAAb;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,SAAS,EAAC,qCAAlC;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,WAAW,EAAC,UAAjC;AAA4C,MAAA,SAAS,EAAC,+BAAtD;AAAsF,MAAA,EAAE,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,YAJJ,EAMQd,WAAW,CAACe,GAAZ,CAAgBC,GAAG,iBACf;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAET,YAAjB;AAA+B,QAAA,SAAS,EAAES,GAAG,CAACX,UAAJ,CAAeC,EAAzD;AAAA,gCAA6D;AAAG,UAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7D,OAAuHU,GAAG,CAACX,UAAJ,CAAeA,UAAtI;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBAEIW,GAAG,CAACC,cAAJ,CAAmBF,GAAnB,CAAuBG,GAAG,iBACtB;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAG,cAAaA,GAAG,CAACZ,EAAG,EAA5C;AAA4D,UAAA,OAAO,EAAEO,WAArE;AAAA,oBAAmFK,GAAG,CAACC;AAAvF,WAAoDD,GAAG,CAACZ,EAAxD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAqCU,GAAG,CAACX,UAAJ,CAAeC,EAApD;AAAA;AAAA;AAAA;AAAA,YADJ,CANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA/CD;;GAAMP,oB;;KAAAA,oB;AAiDN,eAAeA,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nconst ContactsOrganisation = ({ departments, setDepartment }) => {\n\n    useEffect(()=> {\n        departments.forEach( el => {\n            if (el.used) {\n                setDepartment(`department/${el.department.id}`)\n            }\n        });\n    }, [departments])\n\n    const toggleActive = (e) => {\n        if (!e.target.className.includes(\"fas\")) {\n            setDepartment(`department/${e.target.className}`)\n        }\n        if (e.target.parentNode.className === 'class_dropdown') {\n            e.target.parentNode.className = 'class_dropdown active'\n        } else {\n            e.target.parentNode.className = 'class_dropdown'\n        }\n    }\n\n    const handleClick = (e) => {\n        setDepartment(`sub/${e.target.className.split(\" \")[1]}`)\n    }\n    \n    return (\n        <div className=\"contacts__homepage-item contacts__organisation\">\n            <label htmlFor=\"search\" className=\"contacts__organisation-search-label\">\n                <i className=\"fas fa-search\" />\n            </label>\n            <input type=\"search\" placeholder=\"keywords\" className=\"contacts__organisation-search\" id=\"search\" />\n            {\n                departments.map(dep => (\n                    <nav className=\"class_dropdown\" key={dep.department.id} >\n                        <button onClick={toggleActive} className={dep.department.id}><i className=\"fas fa-caret-right contacts__caret\" > </i> {dep.department.department}</button>\n                        <div className=\"class_dropdown-child\">\n                        {\n                            dep.subDepartments.map(sub => (\n                                <a href=\"#\" className={`class_link ${sub.id}`} key={sub.id} onClick={handleClick}>{sub.subDepartment}</a>\n                            ))\n                        }\n                        </div>\n                    </nav>\n                ))\n            }\n        </div>\n    );\n};\n\nexport default ContactsOrganisation;"]},"metadata":{},"sourceType":"module"}