{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/document_management/src/components/documents/DocumentDatePicker.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import DatePicker from 'react-date-picker';\n// export const DocumentDatePicker = ({handleChange, dateId}) => {\n// \tconst [startDate, setStartDate] = useState(new Date());\n// \treturn (\n// \t\t<DatePicker locale=\"en\" selected={startDate} onChange={(e) => {\n// \t\t\tconsole.dir(e)\n// \t\t\tconsole.log()\n// \t\t\t// handleChange(e, dateId)\n// \t\t}} wrapperClassName=\"datePicker\" dateFormat=\"dd/MM/yyyy\"/>\n// \t);\n// };\nimport React, { useState } from \"react\";\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DocumentDatePicker = _ref => {\n  _s();\n\n  let {\n    handleChange,\n    dateId\n  } = _ref;\n  const [startdate, setStartdate] = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    locale: \"en\",\n    dateFormat: \"dd / MM / yyyy\",\n    selected: startdate,\n    onChange: date => {\n      handleChange(`${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`, dateId);\n      setStartdate(date);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DocumentDatePicker, \"iUPXZXtC2NMAKpbhbG/CHkecHew=\");\n\n_c = DocumentDatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentDatePicker\");","map":{"version":3,"sources":["/Users/macbook/Desktop/document_management/src/components/documents/DocumentDatePicker.js"],"names":["React","useState","DatePicker","DocumentDatePicker","handleChange","dateId","startdate","setStartdate","Date","date","getFullYear","getMonth","getDate"],"mappings":";;;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAA6B;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAIO,IAAJ,EAAD,CAA1C;AAEA,sBACC,QAAC,UAAD;AAAY,IAAA,MAAM,EAAC,IAAnB;AAAwB,IAAA,UAAU,EAAC,gBAAnC;AAAoD,IAAA,QAAQ,EAAEF,SAA9D;AAAyE,IAAA,QAAQ,EAAGG,IAAD,IAAU;AAC5FL,MAAAA,YAAY,CAAE,GAAEK,IAAI,CAACC,WAAL,EAAmB,IAAGD,IAAI,CAACE,QAAL,KAAkB,CAAE,IAAGF,IAAI,CAACG,OAAL,EAAe,EAAhE,EAAmEP,MAAnE,CAAZ;AACAE,MAAAA,YAAY,CAACE,IAAD,CAAZ;AACA;AAHD;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CATM;;GAAMN,kB;;KAAAA,kB","sourcesContent":["// import React, { useState } from \"react\";\n// import DatePicker from 'react-date-picker';\n\n\n// export const DocumentDatePicker = ({handleChange, dateId}) => {\n// \tconst [startDate, setStartDate] = useState(new Date());\n\n// \treturn (\n// \t\t<DatePicker locale=\"en\" selected={startDate} onChange={(e) => {\n// \t\t\tconsole.dir(e)\n// \t\t\tconsole.log()\n// \t\t\t// handleChange(e, dateId)\n// \t\t}} wrapperClassName=\"datePicker\" dateFormat=\"dd/MM/yyyy\"/>\n// \t);\n// };\n\nimport React, { useState } from \"react\";\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const DocumentDatePicker = ({ handleChange, dateId }) => {\n\tconst [startdate, setStartdate] = useState(new Date());\n\n\treturn (\n\t\t<DatePicker locale=\"en\" dateFormat=\"dd / MM / yyyy\" selected={startdate} onChange={(date) => {\n\t\t\thandleChange(`${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`, dateId)\n\t\t\tsetStartdate(date)\n\t\t}}/>\n\t);\n};"]},"metadata":{},"sourceType":"module"}